CREATE TABLE [dbo].[ABONNEMENT] (
    [ID]    INT IDENTITY (1, 1) NOT NULL,
    [ELEVE] INT NULL,
    [ANNE]  INT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[AFFECTATION] (
    [ID]         INT IDENTITY (1, 1) NOT NULL,
    [IDETUDIANT] INT NULL,
    [IDSALLE]    INT NULL,
    [ANNE]       INT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[ANNE] (
    [ID]          INT          IDENTITY (1, 1) NOT NULL,
    [DESIGNATION] VARCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[CLASSE] (
    [ID]      INT IDENTITY (1, 1) NOT NULL,
    [NIVEAU]  INT NULL,
    [SECTION] INT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[COMMANDE] (
    [ID]      INT      IDENTITY (1, 1) NOT NULL,
    [ELEVE]   INT      NULL,
    [PRODUIT] INT      NULL,
    [HEURE]   TIME (7) NULL,
    [DATE]    DATE     NULL,
    [LOGIN]   INT      NULL,
    [ANNE]    INT      NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[ELEVE] (
    [ID]            INT             IDENTITY (1, 1) NOT NULL,
    [NOM]           VARCHAR (20)    NOT NULL,
    [POSTNOM]       VARCHAR (20)    NOT NULL,
    [PRENOM]        VARCHAR (20)    NOT NULL,
    [DATENAISSANCE] DATE            NULL,
    [MATRICULE]     VARCHAR (10)    NULL,
    [NOMPERE]       VARCHAR (15)    NULL,
    [NOMMERE]       VARCHAR (15)    NULL,
    [TELEPHONE]     VARCHAR (10)    NULL,
    [ADRESSE]       VARCHAR (100)   NULL,
    [SEXE]          VARCHAR (1)     NULL,
    [IMAGE]         VARBINARY (MAX) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC),
    UNIQUE NONCLUSTERED ([MATRICULE] ASC)
);

GO
CREATE TABLE [dbo].[FRAISCLASSE] (
    [ID]       INT IDENTITY (1, 1) NOT NULL,
    [IDCLASSE] INT NULL,
    [IDMOTIF]  INT NULL,
    [MONTANT]  INT NULL,
    [VALIDITE] INT NULL,
    [ANNE]     INT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[LOGIN] (
    [ID]       INT          IDENTITY (1, 1) NOT NULL,
    [USERNAME] VARCHAR (10) NOT NULL,
    [PASSWORD] VARCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[MOTIF_FRAIS] (
    [ID]          INT          IDENTITY (1, 1) NOT NULL,
    [DESIGNATION] VARCHAR (25) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[NIVEAU] (
    [ID]     INT IDENTITY (1, 1) NOT NULL,
    [NIVEAU] INT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[PAIEMENT] (
    [ID]          INT      IDENTITY (1, 1) NOT NULL,
    [ELEVE]       INT      NULL,
    [FRAISCLASSE] INT      NULL,
    [MONTANT]     INT      NULL,
    [HEURE]       TIME (7) NULL,
    [DATE]        DATE     NULL,
    [ANNE]        INT      NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[PANIER] (
    [ID]          INT IDENTITY (1, 1) NOT NULL,
    [USERS]       INT NULL,
    [FRAISCLASSE] INT NULL,
    [MONTANT]     INT NULL,
    [ELEVE]       INT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[SALLE] (
    [ID]          INT         IDENTITY (1, 1) NOT NULL,
    [CLASSE]      INT         NULL,
    [DESIGNATION] VARCHAR (5) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[SECTION] (
    [ID]          INT          IDENTITY (1, 1) NOT NULL,
    [DESIGNATION] VARCHAR (15) NOT NULL,
    [ABREVIATION] VARCHAR (5)  NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[STOCK] (
    [ID]          INT          IDENTITY (1, 1) NOT NULL,
    [DESIGNATION] VARCHAR (25) NOT NULL,
    [PRIX]        INT          NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[TARIF] (
    [ID]      INT IDENTITY (1, 1) NOT NULL,
    [ANNE]    INT NULL,
    [MONTANT] INT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

GO
CREATE TABLE [dbo].[TARIFABONNEMENT] (
    [ANNE]    INT NULL,
    [MONTANT] INT NULL
);

GO
CREATE VIEW [dbo].[SALLE_DE_CLASSE]
AS
(SELECT SALLE.ID,
        NIVEAU.NIVEAU,
        SECTION.ABREVIATION,
        SALLE.DESIGNATION
 FROM   SALLE
        INNER JOIN
        CLASSE
        ON CLASSE.ID = SALLE.CLASSE
        INNER JOIN
        NIVEAU
        ON NIVEAU.ID = CLASSE.NIVEAU
        INNER JOIN
        SECTION
        ON SECTION.ID = CLASSE.SECTION);

GO
ALTER TABLE [dbo].[ABONNEMENT]
    ADD CONSTRAINT [FK_ABONNEMENT_ANNE] FOREIGN KEY ([ANNE]) REFERENCES [dbo].[ANNE] ([ID]);

GO
ALTER TABLE [dbo].[ABONNEMENT]
    ADD CONSTRAINT [FK_ABONNEMENT_ELEVE] FOREIGN KEY ([ELEVE]) REFERENCES [dbo].[ELEVE] ([ID]);

GO
ALTER TABLE [dbo].[AFFECTATION]
    ADD CONSTRAINT [FK_AFFECTATION_ELEVE] FOREIGN KEY ([IDETUDIANT]) REFERENCES [dbo].[ELEVE] ([ID]);

GO
ALTER TABLE [dbo].[AFFECTATION]
    ADD CONSTRAINT [FK_AFFECTATION_SALLE] FOREIGN KEY ([IDSALLE]) REFERENCES [dbo].[SALLE] ([ID]);

GO
ALTER TABLE [dbo].[CLASSE]
    ADD CONSTRAINT [FK_CLASSE_NIVEAU] FOREIGN KEY ([NIVEAU]) REFERENCES [dbo].[NIVEAU] ([ID]);

GO
ALTER TABLE [dbo].[CLASSE]
    ADD CONSTRAINT [FK_CLASSE_SECTION] FOREIGN KEY ([SECTION]) REFERENCES [dbo].[SECTION] ([ID]);

GO
ALTER TABLE [dbo].[COMMANDE]
    ADD CONSTRAINT [FK_COMMANDE_ELEVE] FOREIGN KEY ([ELEVE]) REFERENCES [dbo].[ELEVE] ([ID]);

GO
ALTER TABLE [dbo].[COMMANDE]
    ADD CONSTRAINT [FK_COMMANDE_LOGIN] FOREIGN KEY ([LOGIN]) REFERENCES [dbo].[LOGIN] ([ID]);

GO
ALTER TABLE [dbo].[COMMANDE]
    ADD CONSTRAINT [FK_COMMANDE_STOCK] FOREIGN KEY ([PRODUIT]) REFERENCES [dbo].[STOCK] ([ID]);

GO
ALTER TABLE [dbo].[FRAISCLASSE]
    ADD CONSTRAINT [FK_FRAISCLASSE_ANNE] FOREIGN KEY ([ANNE]) REFERENCES [dbo].[ANNE] ([ID]);

GO
ALTER TABLE [dbo].[FRAISCLASSE]
    ADD CONSTRAINT [FK_FRAISCLASSE_CLASSE] FOREIGN KEY ([IDCLASSE]) REFERENCES [dbo].[CLASSE] ([ID]);

GO
ALTER TABLE [dbo].[FRAISCLASSE]
    ADD CONSTRAINT [FK_FRAISCLASSE_MOTIF_FRAIS] FOREIGN KEY ([IDMOTIF]) REFERENCES [dbo].[MOTIF_FRAIS] ([ID]);

GO
ALTER TABLE [dbo].[PAIEMENT]
    ADD CONSTRAINT [FK_PAIEMENT_ANNE] FOREIGN KEY ([ANNE]) REFERENCES [dbo].[ANNE] ([ID]);

GO
ALTER TABLE [dbo].[PAIEMENT]
    ADD CONSTRAINT [FK_PAIEMENT_ELEVE] FOREIGN KEY ([ELEVE]) REFERENCES [dbo].[ANNE] ([ID]);

GO
ALTER TABLE [dbo].[PAIEMENT]
    ADD CONSTRAINT [FK_PAIEMENT_FRAISCLASSE] FOREIGN KEY ([FRAISCLASSE]) REFERENCES [dbo].[FRAISCLASSE] ([ID]);

GO
ALTER TABLE [dbo].[PANIER]
    ADD CONSTRAINT [FK_PANIER_ELEVE] FOREIGN KEY ([ELEVE]) REFERENCES [dbo].[ELEVE] ([ID]);

GO
ALTER TABLE [dbo].[PANIER]
    ADD CONSTRAINT [FK_PANIER_FRAISCLASSE] FOREIGN KEY ([FRAISCLASSE]) REFERENCES [dbo].[FRAISCLASSE] ([ID]);

GO
ALTER TABLE [dbo].[SALLE]
    ADD CONSTRAINT [FK_SALLE_CLASSE] FOREIGN KEY ([CLASSE]) REFERENCES [dbo].[CLASSE] ([ID]);

GO
ALTER TABLE [dbo].[TARIFABONNEMENT]
    ADD CONSTRAINT [TA] FOREIGN KEY ([ANNE]) REFERENCES [dbo].[ANNE] ([ID]);

GO
CREATE PROCEDURE [dbo].[ABONNER]
@MATRICULE VARCHAR (15)
AS
BEGIN
    DECLARE @ID AS INT;
    SELECT @ID = ID
    FROM   ELEVE
    WHERE  ELEVE.MATRICULE = @MATRICULE;
    INSERT  INTO ABONNEMENT (ELEVE, ANNE)
    VALUES                 (@ID, (SELECT MAX(ID)
                                  FROM   ANNE));
END

GO
CREATE PROCEDURE [dbo].[AJOUT_MOTIF_PAIEMENT]
@DESIGNATION VARCHAR (15)
AS
BEGIN
    INSERT  INTO MOTIF_FRAIS (DESIGNATION)
    VALUES                  (@DESIGNATION);
END

GO
CREATE PROCEDURE [dbo].[AJOUTER_ELEVE]
@NOM VARCHAR (20), @POSTNOM VARCHAR (20), @PRENOM VARCHAR (20), @NOMPERE VARCHAR (15), @NOMMERE VARCHAR (15), @TELEPHONE VARCHAR (10), @ADRESSE VARCHAR (100), @NIVEAU INT, @ABREVIATION VARCHAR (5), @DESIGNATION VARCHAR (1), @SEXE VARCHAR (1)
AS
BEGIN
    DECLARE @MATRICULE AS VARCHAR (25);
    SELECT @MATRICULE = CONCAT((SELECT YEAR(GETDATE())), '', SUBSTRING(@NOM, 1, 1), '', SUBSTRING(@POSTNOM, 1, 1), '', (SELECT FORMAT((SELECT COUNT(*) + 1
                                                                                                                                       FROM   ELEVE), '0000')));
    INSERT  INTO ELEVE (MATRICULE, NOM, POSTNOM, PRENOM, DATENAISSANCE, NOMPERE, NOMMERE, TELEPHONE, ADRESSE, SEXE)
    VALUES            (@MATRICULE, @NOM, @POSTNOM, @PRENOM, NULL, @NOMPERE, @NOMMERE, @TELEPHONE, @ADRESSE, @SEXE);
    INSERT  INTO AFFECTATION (IDETUDIANT, IDSALLE, ANNE)
    VALUES                  ((SELECT MAX(ID)
                              FROM   ELEVE), (SELECT ID
                                              FROM   SALLE_DE_CLASSE
                                              WHERE  NIVEAU = @NIVEAU
                                                     AND ABREVIATION = @ABREVIATION
                                                     AND DESIGNATION = @DESIGNATION), (SELECT MAX(ID)
                                                                                       FROM   ANNE));
END

GO
CREATE PROCEDURE [dbo].[AJOUTER_NIVEAAU]
@NIVEAU INT
AS
BEGIN
    INSERT  INTO NIVEAU (NIVEAU)
    VALUES             (@NIVEAU);
END

GO
CREATE PROCEDURE [dbo].[AJOUTER_SECTION]
@DESIGNATION VARCHAR (20), @ABREVIATION VARCHAR (5)
AS
BEGIN
    INSERT  INTO SECTION (DESIGNATION, ABREVIATION)
    VALUES              (@DESIGNATION, @ABREVIATION);
END

GO
CREATE PROCEDURE [dbo].[AJOUTERFRAISCLASSE]
@NIVEAU INT, @SECTION VARCHAR (5), @MOTIF VARCHAR (25), @MONTANT INT
AS
BEGIN
    DECLARE @CLASSE AS INT;
    DECLARE @MOTIF_ID AS INT;
    SELECT @CLASSE = CLASSE.ID
    FROM   CLASSE
           INNER JOIN
           NIVEAU
           ON NIVEAU.ID = CLASSE.NIVEAU
           INNER JOIN
           SECTION
           ON SECTION.ID = CLASSE.SECTION
    WHERE  NIVEAU.ID = @NIVEAU
           AND SECTION.ABREVIATION = @SECTION;
    SELECT @MOTIF_ID = ID
    FROM   MOTIF_FRAIS
    WHERE  MOTIF_FRAIS.DESIGNATION = @MOTIF;
    INSERT  INTO FRAISCLASSE (IDCLASSE, IDMOTIF, MONTANT, VALIDITE, ANNE)
    VALUES                  (@CLASSE, @MOTIF_ID, @MONTANT, 0, (SELECT MAX(ID)
                                                               FROM   ANNE));
END

GO
CREATE PROCEDURE [dbo].[AJOUTERPANIER]
@MATRICULE VARCHAR (10), @MONTANT INT, @MOTIF VARCHAR (25), @NIVEAU INT, @SECTION VARCHAR (5)
AS
BEGIN
    DECLARE @IDELEVE AS INT;
    DECLARE @FRAISCLASSE AS INT;
    SELECT @IDELEVE = ID
    FROM   ELEVE
    WHERE  MATRICULE = @MATRICULE;
    SELECT @FRAISCLASSE = FRAISCLASSE.ID
    FROM   MOTIF_FRAIS
           INNER JOIN
           FRAISCLASSE
           ON FRAISCLASSE.IDMOTIF = MOTIF_FRAIS.ID
           INNER JOIN
           CLASSE
           ON CLASSE.ID = FRAISCLASSE.IDCLASSE
           INNER JOIN
           NIVEAU
           ON NIVEAU.ID = CLASSE.NIVEAU
           INNER JOIN
           SECTION
           ON SECTION.ID = CLASSE.SECTION
    WHERE  NIVEAU.NIVEAU = @NIVEAU
           AND SECTION.ABREVIATION = @SECTION
           AND MOTIF_FRAIS.DESIGNATION = @MOTIF;
    INSERT  INTO PANIER (USERS, FRAISCLASSE, MONTANT, ELEVE)
    VALUES             (1, @FRAISCLASSE, @MONTANT, @IDELEVE);
END

GO
CREATE PROCEDURE [dbo].[LOGIN_PROC]
@USERNAME VARCHAR (15), @PASSOWRD VARCHAR (15)
AS
BEGIN
    IF ((SELECT COUNT(*)
         FROM   LOGIN
         WHERE  USERNAME = @USERNAME) = 0)
        BEGIN
            SELECT 1;
        END
    ELSE
        IF ((SELECT COUNT(*)
             FROM   LOGIN
             WHERE  USERNAME = @USERNAME
                    AND PASSWORD = @PASSOWRD) = 0)
            BEGIN
                SELECT 2;
            END
        ELSE
            BEGIN
                SELECT 3;
            END
END

GO
CREATE PROCEDURE [dbo].[MONTANTDEJAPAYE]
@MATRICULE VARCHAR (10), @MOTIF VARCHAR (25)
AS
BEGIN
    DECLARE @IDELEVE AS INT;
    SELECT @IDELEVE = ID
    FROM   ELEVE
    WHERE  MATRICULE = @MATRICULE;
    SELECT ISNULL(SUM(PAIEMENT.MONTANT), 0)
    FROM   PAIEMENT
           INNER JOIN
           FRAISCLASSE
           ON FRAISCLASSE.ID = PAIEMENT.FRAISCLASSE
           INNER JOIN
           ELEVE
           ON ELEVE.ID = PAIEMENT.ELEVE
           INNER JOIN
           MOTIF_FRAIS
           ON MOTIF_FRAIS.ID = FRAISCLASSE.IDMOTIF
    WHERE  PAIEMENT.ANNE = (SELECT MAX(ID)
                            FROM   ANNE)
           AND ELEVE.MATRICULE = @MATRICULE
           AND MOTIF_FRAIS.DESIGNATION = @MOTIF;
END

GO
CREATE PROCEDURE [dbo].[NOUVEAU_SALLE]
@NIVEAU INT, @SECTION VARCHAR (31), @DESIGNATION VARCHAR (1)
AS
BEGIN
    DECLARE @SECTION_ID AS INT;
    DECLARE @MATRICULE_PROF AS VARCHAR (10);
    DECLARE @SALLE_ID AS INT;
    SELECT @SECTION_ID = ID
    FROM   SECTION
    WHERE  SECTION.ABREVIATION = @SECTION;
    DECLARE @CHECK AS INT;
    SELECT @CHECK = COUNT(*)
    FROM   CLASSE
    WHERE  CLASSE.NIVEAU = @NIVEAU
           AND CLASSE.SECTION = @SECTION_ID;
    IF (@CHECK < 1)
        BEGIN
            INSERT  INTO CLASSE (SECTION, NIVEAU)
            VALUES             (@SECTION_ID, @NIVEAU);
            INSERT INTO SALLE (CLASSE, DESIGNATION)
            SELECT ID,
                   @DESIGNATION
            FROM   CLASSE
            WHERE  ID = (SELECT MAX(ID)
                         FROM   CLASSE);
        END
    ELSE
        IF (@CHECK >= 1)
            BEGIN
                DECLARE @id_salle AS INT;
                SELECT @id_salle = CLASSE.ID
                FROM   CLASSE
                WHERE  CLASSE.NIVEAU = @NIVEAU
                       AND CLASSE.SECTION = @SECTION_ID;
                INSERT INTO SALLE (CLASSE, DESIGNATION)
                SELECT @id_salle,
                       @DESIGNATION;
            END
END

GO
CREATE PROCEDURE [dbo].[UPDATEPHOTOELEVE]
@MATRICULE VARCHAR (10), @IMAGE IMAGE
AS
BEGIN
    UPDATE ELEVE
    SET    IMAGE = @IMAGE
    WHERE  ELEVE.MATRICULE = @MATRICULE;
END

GO
